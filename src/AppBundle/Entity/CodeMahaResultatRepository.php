<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CodeMahaResultatRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CodeMahaResultatRepository extends EntityRepository
{
    
    public function findAllAjax($start, $end, $sCol, $sdir, $search) {
        $qb = $this->getEntityManager()
            ->createQuery(
                'SELECT r.id, c.libelle as controle, r.libelle, r.code, r.detail, r.actif, r.reussite FROM AppBundle:CodeMahaResultat r LEFT JOIN r.controle c '
                    . ' WHERE r.libelle like :search or r.code like :search'
                    . ' ORDER BY '.$sCol.' '.$sdir)
            ->setParameter('search', '%'.$search.'%')
            ->setFirstResult($start)
            ->setMaxResults($end);
        $arrayAss = $qb->execute(null, \Doctrine\ORM\Query::HYDRATE_SCALAR);
        return $arrayAss;
    }
    
    public function countRows() {
        $qb = $this->createQueryBuilder('c');
        $qb->select('count(c.id)');
        return  $qb->getQuery()->getSingleScalarResult();
    }
    
    public function countRowsFiltre($search) {
        $qb = $this->createQueryBuilder('r');
        $qb->select('count(r.id)')->where('r.libelle like :search or r.code like :search')->setParameter('search', '%'.$search.'%');
        return  $qb->getQuery()->getSingleScalarResult();
    }
    
    public function trouverParLibelle($libelle) {
       try{ 
         $result = $this->getEntityManager()
            ->createQuery(
                'SELECT r FROM AppBundle:Controle r WHERE r.libelle = :libelle'
            )->setParameter("libelle",$libelle)
            ->getSingleResult();
       }catch (\Doctrine\ORM\NonUniqueResultException $ex) {
            $result = null;
        }
        catch (\Doctrine\ORM\NoResultException $ex){
            $result = null;
        }
        
        return $result; 
    }    
    
    public function trouverActif() {
        $qb = $this->getEntityManager()
            ->createQuery(
                'SELECT r FROM AppBundle:Controle r WHERE r.actif = 1');
        return $qb->getResult();
    }
    
    public function trouverParControle($code) {
        $qb = $this->getEntityManager()
            ->createQuery('SELECT r FROM AppBundle:CodeMahaResultat r LEFT JOIN r.controle c WHERE c.code = :code')
            ->setParameter('code', $code);
        return $qb->getResult();
    }
    
    public function trouverParControleResultat($controle, $resultat) {
       try{ 
         $result = $this->getEntityManager()
            ->createQuery(
                'SELECT r FROM AppBundle:CodeMahaResultat r LEFT JOIN r.controle c WHERE r.code = :resultat AND c.code = :controle'
            )->setParameter("resultat",$resultat)
            ->setParameter("controle",$controle)
            ->getSingleResult();
       }catch (\Doctrine\ORM\NonUniqueResultException $ex) {
            $result = null;
        }
        catch (\Doctrine\ORM\NoResultException $ex){
            $result = null;
        }
        return $result; 
    }
    
}
